const PDFDocument = require("pdfkit");
const path = require('path');

function buildPdf(dataCallback, endCallback, data) {
    const doc = new PDFDocument({font: "Times-Roman"});
    const date = new Date();
    doc.on("data", dataCallback);
    doc.on("end", endCallback);

    const imagePath = path.join(__dirname, '..', 'public', 'RCMIS-1-01.jpg');
    doc.image(imagePath, 25, 25, {
        width: 50,
        height: 50,
    });
    doc.fontSize(22).text(`Patient Data`,{
        align: "center",
        continued: false,
    });
    doc.moveDown();
    doc.fontSize(15).text(`Date: ${date.toLocaleDateString()}`);
    doc.moveDown();
    doc.fontSize(18).text(`Patient Details:`,{
        underline: true,
    });
    doc.moveDown();
    doc.fontSize(15).text(`Patient Name: ${data.patient.user.name} ${data.patient.user.fatherName} ${data.patient.user.grandfatherName}`);
    doc.moveDown();
    doc.fontSize(15).text(`Phone Number: ${data.patient.user.phoneNumber}`);
    doc.moveDown();
    doc.fontSize(15).text(`Patient Type: ${data.patient.patientType}`);
    doc.moveDown();
    doc.fontSize(18).text(`Appointments Details:`,{
        underline: true,
    });
    doc.moveDown();
    doc.fontSize(15).text(`Total number of appointments: ${data.appointments}`);
    doc.moveDown();
    doc.fontSize(15).text(
        `Total number of remaining appointments: ${data.remainingAppointments}`,
    );
    doc.moveDown();
    doc.fontSize(18).text(`Professionals Details:`,{
        underline: true,
    });
    doc.moveDown();
    doc.fontSize(15).text(
        `Number of professionals assigned: ${data.numberOfProfessionals}`,
    );
    doc.moveDown();
    data.professionals.forEach((professional) => {
        doc.fontSize(15).text(
            `Professional Name: ${professional.user.name} ${professional.user.fatherName} ${professional.user.grandfatherName}`
        );
        doc.fontSize(15).text(`Phone Number: ${professional.user.phoneNumber}`);
        doc.moveDown();
    });
    doc.fontSize(18).text(`Clinical History:`,{
        underline: true,
    });
    doc.moveDown();
    data.patientHistory.forEach((history) => {
        doc.fontSize(15).text(`History taken on ${history.createdAt.toLocaleDateString()}`);
        doc.moveDown();
        doc.fontSize(15).text(`Professional Name: ${history.professional.user.name} ${history.professional.user.fatherName} ${history.professional.user.grandfatherName}`);
        doc.moveDown();
        doc.fontSize(15).text(`Content:${history.historyData}`,{
            width: 500,
        });
        doc.moveDown();
        doc.fontSize(15).text(`------------------------------------`,{
            characterSpacing: 2,
        });
    });
    doc.moveDown(4);
    doc.fillColor("lightgray").fontSize(15).text(`Generated by RCMIS`,{
        align: "center",
    });
    doc.end();
}

module.exports = {
    buildPdf,
};
